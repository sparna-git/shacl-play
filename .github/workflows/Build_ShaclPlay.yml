name: Java CI with Maven

on:
  workflow_dispatch:
    
  #push:
  #  branches: [ "master" ]
  pull_request:
    branches: [ "actions_shaclplay" ]

jobs:
  Build_Maven:
    runs-on: ubuntu-latest

    steps:
      - name: CheckOut
        uses: actions/checkout@v3
        
      - name: Setup Maven
        uses: stCarolas/setup-maven@v.4.5
        with:
         maven-version: 3.8.7

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ github.ACTOR }}
          server-password: ${{ github.token }}
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      
      - run: |
          echo "setting File : " ${{ github.workspace }}/settings.xml

      # This step generate a war file
      - name: Build with Maven
        run: mvn -B package --file pom.xml 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Publish
      - name: Publish to Github Package Apache Maven
        run: |
          mvn -e -X deploy -s settings.xml
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Display structure of downloaded files
        run: ls -R

  Publish:
    #needs: Build_Maven
    runs-on: ubuntu-latest
    
    steps:
    
      - name: CheckOut
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify
      
      - name: Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
      
      
    #- name: Create GitHub Release
    #  uses: actions/create-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    #  with: 
    #    tag_name: v${{github.run_number}}
    #    release_name: Release V${{github.run_number}}
        
    #- name: Update version
    #  run: mvn -B versions:set -DnsewVersion=v${{github.run_number}} -DgenerateBackupPoms=false
    
    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn -B deploy -DskipTests --file pom.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}
